[pytest]
# Pytest configuration for FrameWise

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Strict markers (fail on unknown markers)
    --strict-markers
    # Coverage reporting
    --cov=framewise
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    # Fail if coverage is below threshold
    --cov-fail-under=65

# Markers for categorizing tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    requires_gpu: marks tests that require GPU
    requires_models: marks tests that require downloading models

# Warnings
filterwarnings =
    # Ignore specific warnings
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage options
[coverage:run]
source = framewise
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # Standard pragma
    pragma: no cover
    # Don't complain about missing debug code
    def __repr__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @abstractmethod
